name: Build, Push to GCR

on:
  push:
    tags:
    - '*'

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  ORG: roava.io/services
  IMAGE: rei
  REGISTRY_HOSTNAME: gcr.io/${{ secrets.RUN_PROJECT }}

jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goVer: [ '1.14', '1.13' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go ${{ matrix.goVer }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goVer }} # The Go version to download (if necessary) and use.
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint
        
    # Run build of the application
    - name: Run build
      run: go build . 
      
    # Run vet & lint on the code
    - name: Run vet & lint
      run: |
        go vet .
        golint .
    
    # Run testing on the code
    - name: Run testing
      run: go test -v .

  deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    needs: [build] # Only run this workflow when "build" workflow succeeds

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    
    - name: Print version
      run: |
        echo [github.tag]: ${{ steps.get_version.outputs.VERSION }}
        echo [github.sha]: ${{ github.sha }}
        echo [github.ref]: ${{ github.ref }}
        echo [github.actor]: trigered by $GITHUB_ACTOR

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.RUN_SA_KEY }}
        project_id: ${{ secrets.RUN_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build the Docker image
    # images name in format - [ORG]/[IMAGE] e.g. roava.io/myimage
    - name: Build
      run: |
        export TAG=`echo ${{ steps.get_version.outputs.VERSION }}`
        export CONTAINER=`echo $ORG/$IMAGE`
        docker build -t "$REGISTRY_HOSTNAME"/"$CONTAINER":"$TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    # images name in format - [ORG]/[IMAGE] e.g. roava.io/myimage
    # docker push "$REGISTRY_HOSTNAME"/"$CONTAINER":"$GITHUB_SHA"
    - name: Publish
      run: |
        export TAG=`echo ${{ steps.get_version.outputs.VERSION }}`
        export CONTAINER=`echo $ORG/$IMAGE`
        docker push "$REGISTRY_HOSTNAME"/"$CONTAINER":"$TAG"
        docker tag "$REGISTRY_HOSTNAME"/"$CONTAINER":"$TAG" "$REGISTRY_HOSTNAME"/"$CONTAINER":stable
        docker push "$REGISTRY_HOSTNAME"/"$CONTAINER":stable

# The "deploy" workflow
  # deploy:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   needs: [build] # Only run this workflow when "build" workflow succeeds
  #   if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
  #   steps:
  #   - uses: actions/checkout@v2

  #   # Deploy to Docker registry
  #   - name: Deploy to Docker registry
  #     uses: docker/build-push-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
  #       repository: wilsontanwm/gosimple
  #       tag_with_ref: true